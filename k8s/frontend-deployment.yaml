# ================================
# FRONTEND DEPLOYMENT
# Sistema de Licencias MPD
# ================================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: licencias-frontend
  namespace: licencias-mpd
  labels:
    app: licencias-frontend
    component: frontend
    version: "1.7.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: licencias-frontend
  template:
    metadata:
      labels:
        app: licencias-frontend
        component: frontend
        version: "1.7.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/api/metrics"
    spec:
      containers:
      - name: frontend
        image: ghcr.io/mpd/sistema-licencias:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: NEXT_PUBLIC_API_URL
          value: "https://api.licencias.mpd.gov.ar"
        - name: NEXT_PUBLIC_APP_ENV
          value: "production"
        - name: NEXT_PUBLIC_GENKIT_URL
          value: "https://ia.licencias.mpd.gov.ar"
        - name: NEXT_PUBLIC_WHATSAPP_API_URL
          value: "https://whatsapp.licencias.mpd.gov.ar"
        - name: NEXT_PUBLIC_APP_VERSION
          value: "1.7.0"
        - name: NEXT_TELEMETRY_DISABLED
          value: "1"
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: logs
        emptyDir: {}
      securityContext:
        fsGroup: 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - licencias-frontend
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300

---

# ================================
# FRONTEND SERVICE
# ================================

apiVersion: v1
kind: Service
metadata:
  name: licencias-frontend-service
  namespace: licencias-mpd
  labels:
    app: licencias-frontend
    component: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: licencias-frontend

---

# ================================
# HORIZONTAL POD AUTOSCALER
# ================================

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: licencias-frontend-hpa
  namespace: licencias-mpd
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: licencias-frontend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max

---

# ================================
# POD DISRUPTION BUDGET
# ================================

apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: licencias-frontend-pdb
  namespace: licencias-mpd
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: licencias-frontend
